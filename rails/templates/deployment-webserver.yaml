{{- if .Values.webserver.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "rails.name" . }}-webserver
  {{- if .Values.reloader.enabled }}
  annotations:
    reloader.stakater.com/auto: "true"
  {{- end }}
  lables:
    environment: {{ include "rails.environment" . }}
    product: {{ .Values.product }}
    helm.sh/chart: {{ include "rails.chart" . }}
    app.kubernetes.io/name: {{ include "rails.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: {{ include "rails.name" . }}-webserver
spec:
  replicas: {{ .Values.webserver.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rails.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ include "rails.name" . }}-webserver
  minReadySeconds: {{ .Values.replica.minReadySeconds }}
  progressDeadlineSeconds: {{ .Values.replica.progressDeadlineSeconds }}
  revisionHistoryLimit: {{ .Values.replica.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.replica.strategy }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rails.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        environment: {{ include "rails.environment" . }}
        product: {{ .Values.product }}
        app: {{ include "rails.name" . }}-webserver
    spec:
      {{ if .Values.webserver.migrations -}}
      initContainers:
      - name: {{ include "rails.name" . }}-migrations
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh","-c","bundle exec rake db:migrate"]
        {{ if .Values.webserver.custom_configs -}}
        envFrom:
        - secretRef:
           name: {{ .Values.product }}-envvars
        volumeMounts:
          {{- range $index, $config := .Values.webserver.custom_config_files}}
          - name: {{ $.Values.product }}-{{ base $config | replace "." "-" }}-vol
            mountPath: {{ $config }}
            subPath: {{ base $config }}
            readOnly: true
          {{- end }}
        {{- end }}
      {{- end }}
      containers:
      - name: {{ include "rails.name" . }}-webserver
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh","-c","bundle exec puma"]
        ports:
        - containerPort: {{ .Values.webserver.port }}
        env:
        - name: PORT
          value: {{ .Values.webserver.port | quote }}       
        {{- if .Values.datadog.enabled }}
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        {{- end }}
        {{- if .Values.webserver.custom_configs }}
        envFrom:
        - secretRef:
           name: {{ .Values.product }}-envvars
        volumeMounts:
          {{- range $index, $config := .Values.webserver.custom_config_files}}
          - name: {{ $.Values.product }}-{{ base $config | replace "." "-" }}-vol
            mountPath: {{ $config }}
            subPath: {{ base $config }}
            readOnly: true
          {{- end }}
        {{- end }}
        {{- if .Values.probes.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.probes.url }}
            port: {{ .Values.probes.port }}
          initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.periodSeconds }}
        livenessProbe:
          httpGet:
            path: {{ .Values.probes.url }}
            port: {{ .Values.probes.port }}
          initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          periodSeconds: {{ .Values.probes.periodSeconds }}
        {{- end }}
      securityContext:
        fsGroup: {{ .Values.securityContextID }}
        runAsUser: {{ .Values.securityContextID }}
        resources:
{{ toYaml .Values.webserver.resources | indent 10 }}
      {{- if .Values.image_private_registry.enabled }}
      imagePullSecrets:
       - name: {{ .Values.image_private_registry.secret }}
      {{- end }}
      {{ if .Values.webserver.custom_configs -}}
      volumes:
        {{- range $index, $config := .Values.webserver.custom_config_files}}
        - name: {{ $.Values.product }}-{{ base $config | replace "." "-" }}-vol
          secret:           
            secretName: {{ $.Values.product }}-{{ base $config | replace "." "-" }}
        {{- end }}
      {{- end }}    
{{- end }}